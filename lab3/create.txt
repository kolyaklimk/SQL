CREATE TABLE Roles (
    RoleID SERIAL PRIMARY KEY,
    Name VARCHAR(255) NOT NULL
);

CREATE TABLE Users (
    UserID SERIAL PRIMARY KEY,
    RoleID INT,
    FirstName VARCHAR(255) NOT NULL,
    LastName VARCHAR(255),
    Email VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255),
    FOREIGN KEY (RoleId) REFERENCES Roles(RoleID)
);

CREATE TABLE Courses (
    CourseID SERIAL PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Description TEXT,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL
);

CREATE TABLE CourseMaterials (
    MaterialID SERIAL PRIMARY KEY,
    CourseID INT,
    Name VARCHAR(255) NOT NULL,
    Content TEXT NOT NULL,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE UserActions (
    ActionID SERIAL PRIMARY KEY,
    UserID INT,
    DateAndTime TIMESTAMP DEFAULT now(),
    Description TEXT,	
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Instructors (
    InstructorID SERIAL PRIMARY KEY,
    UserID INT,
    CourseID INT,
    Description TEXT,
    Date DATE DEFAULT now(),	
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE Students (
    StudentID SERIAL PRIMARY KEY,
    UserID INT,
    CourseID INT,
    Description TEXT,
    Date DATE DEFAULT now(),	
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE Grades (
    GradeID SERIAL PRIMARY KEY,
    InstructorID INT,
    StudentID INT,
    CourseID INT,
    Grade INT CHECK (Grade <= 10) NOT NULL,
    Description TEXT,
    Date DATE DEFAULT now(),	
    FOREIGN KEY (InstructorID) REFERENCES Instructors(InstructorID),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE CourseForums (
    ForumID SERIAL PRIMARY KEY,
    CourseID INT,
    Name VARCHAR(255) NOT NULL,	
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE ForumMessages (
    MessageID SERIAL PRIMARY KEY,
    ForumID INT,
    UserID INT,
    MessageText TEXT NOT NULL,
    Date DATE DEFAULT now(),	
    FOREIGN KEY (ForumID) REFERENCES CourseForums(ForumID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Assignments (
    AssignmentID SERIAL PRIMARY KEY,
    CourseID INT,
    Name VARCHAR(255) NOT NULL,
    Description TEXT,	
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

CREATE TABLE Submission (
    SubmissionID SERIAL PRIMARY KEY,
    StudentID INT,
    AssignmentID INT,
    SolutionText TEXT NOT NULL,
    Date DATE DEFAULT now(),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (AssignmentID) REFERENCES Assignments(AssignmentID)     
);
